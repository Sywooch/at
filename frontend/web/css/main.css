/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Remove margin
 */
figure {
  margin: 0;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

fieldset {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent;
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/* Blockquote
   ========================================================================== */
blockquote {
  margin: 0;
}

/* Your custom fonts here */
/* Example

@font-face {
    font-family: 'CustomFont';
    src: url('../fonts/Custom-Font.eot');
    src: url('../fonts/Custom-Font.eot?#iefix') format('embedded-opentype'),
         url('../fonts/Custom-Font.woff') format('woff'),
         url('../fonts/Custom-Font.svg#custom_font') format('svg');
    font-weight: 400;       // For normal width. It could has another value   
    font-style: normal;     // Also could has another value
    }


// Var for using custom font
$CustomFont: 'CustomFont', Helvetica, Arial, sans-serif;
*/
@font-face {
  font-family: 'Proxima Nova bold';
  src: url("../fonts/ProximaNova-Semibold.eot");
  src: url("../fonts/ProximaNova-Semibold.eot?#iefix") format("embedded-opentype"), url("../fonts/ProximaNova-Semibold.woff") format("woff"), url("../fonts/ProximaNova-Semibold.ttf") format("truetype");
  font-weight: 600;
  font-style: normal;
}

@font-face {
  font-family: 'Proxima Nova extabold';
  src: url("../fonts/ProximaNova-Extrabld.eot");
  src: url("../fonts/ProximaNova-Extrabld.eot?#iefix") format("embedded-opentype"), url("../fonts/ProximaNova-Extrabld.woff") format("woff"), url("../fonts/ProximaNova-Extrabld.ttf") format("truetype");
  font-weight: 800;
  font-style: normal;
}

@font-face {
  font-family: 'Proxima Nova Lt';
  src: url("../fonts/ProximaNova-Light.eot");
  src: url("../fonts/ProximaNova-Light.eot?#iefix") format("embedded-opentype"), url("../fonts/ProximaNova-Light.woff") format("woff"), url("../fonts/ProximaNova-Light.ttf") format("truetype");
  font-weight: 300;
  font-style: normal;
}

html, body {
  height: 100%;
}

* html .page__wrapper {
  height: 100%;
}

body {
  background-color: #f4f4f4;
}

header {
  background-image: url(../../static/img/content/bg.png);
  background-size: cover;
  background-repeat: no-repeat;
  color: white;
  padding-bottom: 37px;
}

.wrap {
  max-width: 1167px;
  margin: 0 auto;
}

.header_top {
  position: relative;
  padding-top: 20px;
}

.logo {
  width: 170px;
  height: 39px;
  position: absolute;
  left: 0;
}

.btn_header {
  position: absolute;
  right: 0;
  width: 140px;
  height: 50px;
  background-color: rgba(255, 255, 255, 0.3);
  border-radius: 27px;
  border: none;
  color: white;
  outline: none;
}

.btn_header:hover {
  background-color: white;
  color: #04bbef;
}

.btn_header .btn_text {
  font-family: 'Proxima Nova bold';
  font-size: 14px;
  font-weight: 600;
  line-height: 22px;
}

.header_bottom {
  padding-top: 145px;
  width: 374px;
  padding-bottom: 190px;
}

.title {
  font-family: 'Proxima Nova extabold';
  font-size: 48px;
  line-height: 48px;
  text-transform: uppercase;
  position: relative;
}

.title:after {
  content: '_____';
  color: white;
  position: absolute;
  bottom: -9px;
  right: -13px;
  font-size: 12px;
}

.title--what {
  color: #004999;
  margin-top: 85px;
}

.header_text {
  font-family: 'Proxima Nova Lt';
  font-size: 14px;
  font-weight: 300;
  line-height: 22px;
}

.title--map {
  color: #004999;
  width: 312px;
}

.title--map:after {
  content: '_____';
  color: #04bbef;
  position: absolute;
  bottom: -9px;
  right: -40px;
  font-size: 12px;
}

.mouse_block {
  overflow: hidden;
}

.mouse {
  border: 2px solid #717375;
  border-radius: 13px;
  display: block;
  height: 34px;
  left: 50%;
  position: absolute;
  width: 24px;
}

.mouse:hover {
  border: 2px solid white;
}

.mouse span {
  position: relative;
  -webkit-animation-duration: 2s;
          animation-duration: 2s;
  -webkit-animation-fill-mode: both;
          animation-fill-mode: both;
  -webkit-animation-iteration-count: infinite;
          animation-iteration-count: infinite;
  -webkit-animation-name: scroll;
          animation-name: scroll;
  background: none repeat scroll 0 0 white;
  border: 1px solid transparent;
  border-radius: 4px;
  display: block;
  height: 4px;
  margin: 6px auto;
  width: 4px;
}

@-webkit-keyframes scroll {
  0% {
    opacity: 1;
    -webkit-transform: translateY(0px);
            transform: translateY(0px);
  }
  100% {
    opacity: 0;
    -webkit-transform: translateY(20px);
            transform: translateY(20px);
  }
}

@keyframes scroll {
  0% {
    opacity: 1;
    -webkit-transform: translateY(0px);
            transform: translateY(0px);
  }
  100% {
    opacity: 0;
    -webkit-transform: translateY(20px);
            transform: translateY(20px);
  }
}

.prod_wrap {
  vertical-align: top;
}

.product_cell {
  width: 69%;
  display: inline-block;
}

* {
  box-sizing: border-box;
}

.prod_block {
  display: inline-block;
  width: 100%;
  height: 400px;
  overflow: hidden;
}

.prod_block:hover .prod_bg {
  -webkit-transition: 1s;
  transition: 1s;
  -webkit-transform: scale(1.2);
          transform: scale(1.2);
}

.prod_bg {
  width: 100%;
  height: 100%;
  -webkit-transition: 1s;
  transition: 1s;
}

.product_column {
  vertical-align: top;
}

.prod_inside {
  display: inline-block;
  position: relative;
  float: left;
  height: 400px;
  background-color: #fff;
}

.prod_title {
  display: inline-block;
  color: #04bbef;
  font-family: 'Proxima Nova bold';
  font-size: 24px;
  line-height: 21px;
  text-transform: uppercase;
  padding: 130px 0 26px 45px;
  margin: 0;
}

.prod_text {
  width: 285px;
  display: inline-block;
  color: #949ca6;
  font-family: 'Proxima Nova Lt';
  font-size: 14px;
  font-weight: 300;
  line-height: 22px;
  margin: 0;
  padding-left: 45px;
}

.prod_img {
  float: left;
  display: inline-block;
  vertical-align: top;
}

.prod--left:after {
  content: '';
  position: absolute;
  right: -8px;
  top: 130px;
  width: 0;
  height: 0;
  border-top: 8px solid transparent;
  border-left: 8px solid white;
  border-bottom: 8px solid transparent;
}

.prod--right:before {
  content: '';
  position: absolute;
  left: -8px;
  top: 130px;
  width: 0;
  height: 0;
  border-top: 8px solid transparent;
  border-right: 8px solid white;
  border-bottom: 8px solid transparent;
}

.main_conumn {
  font-size: 0;
}

.product {
  font-size: 0;
  width: 67%;
  display: inline-block;
}

.product-cell {
  margin: 0;
  padding: 0;
  font-size: 0;
  width: 100%;
  display: inline-block;
}

.product-cell__item {
  display: inline-block;
  width: 50%;
}

.fix_block {
  display: inline-block;
  height: 2400px;
  width: 33%;
  background: #004999;
  vertical-align: top;
}

.fix_content {
  padding: 60px 49px 60px 45px;
}

.fix_title {
  color: white;
  font-family: 'Proxima Nova bold';
  font-size: 24px;
  line-height: 21px;
  text-transform: uppercase;
}

.fix_text {
  font-family: 'Proxima Nova Lt';
  color: #cde0ff;
  opacity: 0.5;
  font-size: 14px;
  font-weight: 300;
  line-height: 22px;
}

.fix_tex--first {
  margin-bottom: 75px;
}

.fix-btn {
  width: 190px;
  height: 50px;
  background-color: #04bbef;
  color: white;
  border-radius: 27px;
  border: none;
  margin-top: 8px;
}

.fix-btn:hover {
  background-color: black;
  -webkit-transition: color 3s 3s;
  transition: color 3s 3s;
}

.fix-btn_text {
  font-family: 'Proxima Nova bold';
  font-size: 14px;
  font-weight: 600;
  line-height: 26px;
}

.social-cell {
  margin: 0;
  padding: 0;
  font-size: 0;
  width: 100%;
  display: inline-block;
}

.social-cell__item {
  display: inline-block;
  width: 50%;
}

.social_block {
  display: inline-block;
  width: 100%;
  overflow: hidden;
}

.social_block:hover .social_bg {
  -webkit-transition: 1s;
  transition: 1s;
  -webkit-transform: scale(1.2);
          transform: scale(1.2);
}

.social_bg {
  width: 100%;
  height: 100%;
  -webkit-transition: 1s;
  transition: 1s;
}

.social_img {
  float: left;
  display: inline-block;
  vertical-align: top;
}

.social_inside {
  display: inline-block;
  background-color: #fff;
  height: 430px;
  padding: 70px 88px 0 70px;
  box-sizing: border-box;
  float: left;
}

.social_title {
  color: #004999;
  width: 382px;
  padding-bottom: 60px;
  margin: 0;
}

.social_text {
  color: #949ca6;
  font-family: 'Proxima Nova Lt';
  font-size: 14px;
  font-weight: 300;
  line-height: 22px;
  margin: 0;
}

.get_in_touch {
  padding: 75px 0;
  background-color: #004999;
  clear: both;
}

.get_in_touch .get_wrap .title--get {
  color: #fff;
  display: inline-block;
  margin: 0;
}

.get_in_touch .get_wrap .title--get:after {
  content: '____';
  right: -45px;
  bottom: -10px;
}

.get_in_touch .get_wrap .get_text {
  display: inline-block;
  width: 415px;
  color: #82a0d0;
  font-family: 'Proxima Nova Lt';
  font-size: 14px;
  font-weight: 300;
  line-height: 22px;
  padding-left: 160px;
}

.get_in_touch .get_wrap .get_btn {
  display: inline-block;
  vertical-align: top;
  outline: none;
  width: 170px;
  height: 50px;
  background-color: #04bbef;
  color: white;
  border-radius: 27px;
  border: none;
  margin-top: 8px;
}

.get_in_touch .get_wrap .get_btn:hover {
  background-color: black;
  -webkit-transition: color 3s 3s;
  transition: color 3s 3s;
}

.get_in_touch .get_wrap .btn_get_text {
  font-size: 14px;
  font-weight: 600;
  line-height: 22px;
  font-family: 'Proxima Nova bold';
}

footer {
  background-color: #272829;
}

footer .footer_inside {
  width: 320px;
  display: block;
  margin: 0 auto;
  color: #fff;
  text-align: center;
  padding: 75px 0 10px 0;
}

footer .footer_inside .footer_logo {
  margin-bottom: 18px;
}

footer .footer_inside .question {
  font-family: 'Proxima Nova bold';
  font-size: 16px;
  line-height: 24px;
}

footer .footer_inside .tel {
  font-family: 'Proxima Nova bold';
  font-size: 16px;
  line-height: 26px;
  margin: 0;
}

footer .footer_inside .copyright {
  color: #5e6063;
  font-family: 'Proxima Nova bold';
  font-size: 12px;
  font-weight: 300;
  line-height: 20px;
  margin-top: 40px;
}

footer .footer_inside .by {
  display: inline-block;
  vertical-align: bottom;
  color: #5e6063;
  font-family: 'Proxima Nova bold';
  font-size: 12px;
  font-weight: 300;
  line-height: 20px;
}

footer .footer_inside .footer_link_vintage {
  fill: #5e6063;
}

footer .footer_inside .footer_link_vintage:hover {
  fill: white;
}

.mask {
  background: #000;
  opacity: 0.4;
  z-index: 1;
  top: 0;
  left: 0;
}

.mask_active {
  position: fixed;
  height: 100%;
  width: 100%;
}

.popup {
  display: block;
  position: fixed;
  top: 10%;
  left: 0;
  right: 0;
  bottom: 0;
  -webkit-transition: 1s;
  transition: 1s;
  width: 570px;
  height: 558px;
  background-color: #004999;
  margin-left: auto;
  margin-right: auto;
  -webkit-transform: scale(0);
          transform: scale(0);
  z-index: 2;
  box-sizing: border-box;
  padding: 75px 100px;
}

.close {
  display: block;
  background-image: url(../../static/img/content/close.png);
  width: 12px;
  height: 12px;
  position: absolute;
  top: 26px;
  right: 26px;
}

.show {
  -webkit-transition: 1s;
  transition: 1s;
  -webkit-transform: scale(1);
          transform: scale(1);
}

.form_title {
  color: white;
  font-family: 'Proxima Nova extabold';
  font-size: 48px;
  line-height: 48px;
  text-transform: uppercase;
  text-align: center;
  margin: 0;
}

.form_group {
  display: block;
}

.btn_form {
  display: block;
  margin: 0 auto;
  width: 170px;
  margin-top: 30px;
}

.get_btn {
  display: inline-block;
  vertical-align: top;
  outline: none;
  width: 170px;
  height: 50px;
  background-color: #04bbef;
  color: white;
  border-radius: 27px;
  border: none;
  margin-top: 8px;
  -webkit-transition: color 3s 3s;
  transition: color 3s 3s;
}

.get_btn:hover {
  background-color: black;
  -webkit-transition: color 3s 3s;
  transition: color 3s 3s;
}

input {
  width: 370px;
  height: 63px;
  background-color: #004999;
  outline: none;
  display: inline-block;
  border: none;
  color: #82a0d0;
  border-bottom: 2px solid #015aa6;
  padding-left: 24px;
}

input:focus::-webkit-input-placeholder {
  color: transparent;
}

input:focus:-moz-placeholder {
  color: transparent;
}

input:focus::-moz-placeholder {
  color: transparent;
}

input:focus:-ms-input-placeholder {
  color: transparent;
}

textarea:focus::-webkit-input-placeholder {
  color: transparent;
}

textarea:focus:-moz-placeholder {
  color: transparent;
}

textarea:focus::-moz-placeholder {
  color: transparent;
}

textarea:focus:-ms-input-placeholder {
  color: transparent;
}

input[type="text"] {
  color: #04bbef;
  font-size: 14px;
  font-family: 'Proxima Nova Lt';
}

::-webkit-input-placeholder {
  color: #82a0d0;
  font-family: 'Proxima Nova bold';
  font-size: 14px;
  font-weight: 300;
  line-height: 22px;
}

::-moz-placeholder {
  color: #82a0d0;
  font-family: 'Proxima Nova bold';
  font-size: 14px;
  font-weight: 300;
  line-height: 22px;
}

:-moz-placeholder {
  color: #82a0d0;
  font-family: 'Proxima Nova bold';
  font-size: 14px;
  font-weight: 300;
  line-height: 22px;
}

:-ms-input-placeholder {
  color: #82a0d0;
  font-family: 'Proxima Nova bold';
  font-size: 14px;
  font-weight: 300;
  line-height: 22px;
}

textarea {
  background-color: #004999;
  outline: none;
  display: inline-block;
  border: none;
  color: #04bbef;
  border-bottom: 2px solid #015aa6;
  font-family: 'Proxima Nova bold';
  font-weight: 300;
  line-height: 22px;
  padding-left: 24px;
  margin-bottom: -4px;
}

.form-group {
  position: relative;
  margin-bottom: 15px;
}

.underline {
  background-color: dodgerblue;
  display: inline-block;
  height: 1px;
  position: absolute;
  bottom: 0;
  -webkit-transform: scale(0, 1);
  transform: scale(0, 1);
  -webkit-transition: all 0.2s linear;
  transition: all 0.2s linear;
  width: 100%;
}

.form-control:focus + .underline {
  -webkit-transform: scale(1);
          transform: scale(1);
}

@-webkit-keyframes fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@keyframes fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.headline {
  position: relative;
  padding: 70px 0 120px 0;
}

.headline__title {
  color: #004999;
  font-family: 'Proxima Nova extabold';
  font-size: 48px;
  text-transform: uppercase;
  position: relative;
  margin: 0;
}

.headline__title:after {
  content: '_____';
  color: #04bbef;
  position: absolute;
  left: 310px;
  bottom: 0;
  font-size: 12px;
}

.headline__info {
  width: 350px;
  float: right;
}

.headline__info-title {
  color: #04bbef;
  font-family: 'Proxima Nova bold';
  font-size: 24px;
  line-height: 21px;
  text-transform: uppercase;
}

.headline__info-text {
  color: #949ca6;
  font-family: 'Proxima Nova Lt';
  font-size: 14px;
  font-weight: 300;
  line-height: 22px;
}

.headline__main-title {
  color: white;
  font-family: 'Proxima Nova extabold';
  font-size: 220px;
  text-transform: uppercase;
  margin: 0;
}

.headline__img-left {
  position: absolute;
  left: 200px;
  top: 110px;
}

.headline__img-right {
  position: absolute;
  right: 290px;
  top: 210px;
}

/*# sourceMappingURL=data:application/json;base64, */
